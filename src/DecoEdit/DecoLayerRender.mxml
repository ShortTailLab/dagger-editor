<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="onCreate()">
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			
			private var mData:Object;
			private var mEdit:DecoLayerEdit;
			private var mBg:UIComponent;
			/** layer data -> SingleLayer */
			private var mData2LayerDict:Dictionary;
			private var mCreated:Boolean = false;
			
			private function onCreate():void {
				this.mCreated = true;
				if (this.mData) {
					this.update();
				}
			}
			
			public function init(data:Object, edit:DecoLayerEdit):void {
				this.mData = data;
				this.mEdit = edit;
				this.mBg = new UIComponent();
				this.addElement(this.mBg);
				
				this.mData2LayerDict = new Dictionary();
				
				if (this.mCreated) {
					this.update();
				}
			}
			
			private function update():void {
				var maxWidth:Number = 960;
				var maxHeight:Number = 1280;
				for each (var layer:Object in this.mData.layers) {
					if (layer.w > maxWidth) {
						maxWidth = layer.w;
					}
					if (layer.h > maxHeight) {
						maxHeight = layer.h;
					}
				}
				this.width = maxWidth;
				this.height = maxHeight;
				for each (layer in this.mData.layers) {
					var l:SingleLayer = new SingleLayer();
					this.addElement(l);
					l.setData(layer, this.mEdit);
					this.mData2LayerDict[layer] = l;
				}
				this.setBg();
			}
			
			public function setBg():void {
				if (!this.mData.bg) return;
				var file:File = Data.getInstance().resolvePath("images/bg/"+this.mData.bg+".png");
				var loader:Loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onBgLoaded);
				loader.load(new URLRequest(file.url));
			}
			
			private function onBgLoaded(event:Event):void {
				this.mBg.removeChildren();
				this.mBg.addChild(event.currentTarget.content);
			}
			
			public function updateBorder():void {
				var maxWidth:Number = 960;
				var maxHeight:Number = 1280;
				for each (var l:Object in this.mData.layers) {
					if (l.w > maxWidth) {
						maxWidth = l.w;
					}
					if (l.h > maxHeight) {
						maxHeight = l.h;
					}
				}
				this.width = maxWidth;
				this.height = maxHeight;
			}
			
			public function get dict():Dictionary { return this.mData2LayerDict; }
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
</s:Group>
