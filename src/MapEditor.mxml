<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   creationComplete="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			private var editView:EditView;
			
			private function init():void
			{
				Data.getInstance().init();
				Data.getInstance().addEventListener(Event.COMPLETE, onDataReady);
			}
			
			private function onDataReady(e:Event):void
			{
				var menu:ContextMenu = new ContextMenu;
				var item:ContextMenuItem = new ContextMenuItem("新建");
				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, newLevel);
				var item2:ContextMenuItem = new ContextMenuItem("删除");
				item2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, deleteLevel);
				menu.addItem(item);
				menu.addItem(item2);
				levelTree.contextMenu = menu;
				
				levelTree.dataProvider = Data.getInstance().levelXML;
				
				editView = new EditView(mapView);
				mapView.addElement(editView);
				editView.init(Data.getInstance().levelXML.level[0].@label);
				matsGroup.addElement(MatsView.getInstance());
			}
			
			private function onNewClick(e:ContextMenuEvent):void
			{
				
			}
			
			private function onDeleteClick(e:ContextMenuEvent):void
			{
				
			}
			
			private function onLevelClick(e:Event):void{
				var selectedNode = (e.target as Tree).selectedItem as XML;
				var label:String=selectedNode.@label;
				editView.init(label);
			}	
			
			private function newLevel(e:ContextMenuEvent):void
			{
				var levelLength:int = Data.getInstance().levelXML.level.length()+1;
				Data.getInstance().makeNewLevel("level"+levelLength);
				editView.init("level"+levelLength);
			}
			private function deleteLevel(e:ContextMenuEvent):void
			{
				Alert.okLabel = "确定";
				Alert.cancelLabel = "取消";
				var selectedNode = levelTree.selectedItem as XML;
				if(selectedNode)
					Alert.show("确定删除？", "tips", Alert.OK|Alert.CANCEL, this, alertClose);
				else 
					Alert.show("选择关卡");
			}
			private function alertClose(e:CloseEvent):void
			{
				if(e.detail == Alert.OK)
				{
					var selectedNode = levelTree.selectedItem as XML;
					if(selectedNode)
					{
						var label:String=selectedNode.@label;
						Data.getInstance().deleteLevel(label);
					}
				}
			}
			private function save(event:Event):void
			{
				editView.save();
				Data.getInstance().saveLocal();
				Data.getInstance().exportJS();
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	<s:VGroup  width="200" height="100%" paddingTop="5" horizontalAlign="center">
		<s:HGroup width="100%" height="30" verticalAlign="middle" horizontalAlign="center">
			<s:Button label="保存" width="70" height="30" click="save(event)"/>
		</s:HGroup>
		<s:Panel width="100%" height="100%" title="关卡">
			<mx:Tree id="levelTree" enabled="true" labelField="@label" 
					 width="100%" height="100%" showRoot="false" itemClick="onLevelClick(event)">
			</mx:Tree>
		</s:Panel>
	</s:VGroup>
	<mx:Canvas id="mapView" height="100%" width="100%">
	</mx:Canvas>
	<s:VGroup height="100%" verticalAlign="top" horizontalAlign="center">
		<s:Panel title="模型" width="100%" height="100%">
			
		</s:Panel>
		<s:Panel id="matsPanel" title="资源" width="250" height="600" backgroundColor="0xE0FFFF" >
			<s:HGroup width="100%" horizontalAlign="left">
				<s:Group id="matsGroup" clipAndEnableScrolling="true" width="100%" height="600"/>
				<s:VScrollBar viewport="{matsGroup}" height="100%"/>
			</s:HGroup>
		</s:Panel>
	</s:VGroup>
	
	
		
</s:WindowedApplication>