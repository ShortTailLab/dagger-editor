<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   creationComplete="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.Tree;
			import mx.events.CloseEvent;
			
			import spark.components.Group;
			import spark.components.List;
			import spark.components.VScrollBar;
			
			import bgedit.BgEditView;
			import bgedit.BgModel;
			
			import excel.ExcelReader;
			
			import manager.EventManager;
			import manager.EventType;
			import manager.GameEvent;
			
			
			public var fView:FormationsView = null;
			public var matsView:MatsView = null;
			
			private function init():void
			{
				_instance = this;
				
				var menu:ContextMenu = new ContextMenu;
				var item:ContextMenuItem = new ContextMenuItem("新建");
				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onCreateNew);
				var item2:ContextMenuItem = new ContextMenuItem("重命名");
				item2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onRename);
				var item3:ContextMenuItem = new ContextMenuItem("删除");
				item3.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, onDelete);
				menu.addItem(item);
				menu.addItem(item2);
				menu.addItem(item3);
				accordion.contextMenu = menu;
				
				Data.getInstance().addEventListener(Event.COMPLETE, onDataReady);
				Data.getInstance().init();
				
				EventManager.getInstance().addEventListener(EventType.INIT_BG_DATA_COMPLETE, onBgDataInit);
				BgModel.getInstance().init();
			}
			
			private function onDataReady(e:Event):void
			{
				_tree = new Tree();
				_tree.dataProvider = Data.getInstance().levelXML;
				_tree.enabled = true;
				_tree.labelField = "@label";
				_tree.percentWidth = 100;
				_tree.percentHeight = 100;
				_tree.showRoot = false;
				_tree.addEventListener(MouseEvent.CLICK, onLevelClick);
				enemyEdit.addElement(_tree);
				
				_enemyEditView = new EditView(this, middleArea);
				_enemyEditView.init(Data.getInstance().levelXML.level[0].@label);
				
				var modelView:Panel = new Panel();
				modelView.percentHeight = 40;
				modelView.percentWidth = 100;
				modelView.title = "模型";
				var hgroup:HGroup = new HGroup();
				hgroup.percentWidth = 100;
				hgroup.percentHeight = 100;
				hgroup.horizontalAlign = "left";
				var group:Group = new Group();
				group.clipAndEnableScrolling = true;
				group.percentWidth = 100;
				group.percentHeight = 100;
				fView = new FormationsView;
				fView.percentWidth = 100;
				group.addElement(fView);
				var vscrollbar:VScrollBar = new VScrollBar();
				vscrollbar.percentHeight = 100;
				vscrollbar.viewport = group;
				hgroup.addElement(group);
				hgroup.addElement(vscrollbar);
				modelView.addElement(hgroup);
				
				
				var matsPanel:Panel = new Panel();
				matsPanel.title = "资源";
				matsPanel.percentHeight = 60;
				matsPanel.percentWidth = 100;
				hgroup = new HGroup();
				hgroup.percentWidth = 100;
				hgroup.percentHeight = 100;
				hgroup.horizontalAlign = "left";
				group = new Group();
				group.clipAndEnableScrolling = true;
				group.percentWidth = 100;
				group.percentHeight = 100;
				vscrollbar = new VScrollBar();
				vscrollbar.percentHeight = 100;
				vscrollbar.viewport = group;
				hgroup.addElement(group);
				hgroup.addElement(vscrollbar);
				matsPanel.addElement(hgroup);
				matsView = new MatsView;
				matsView.percentWidth = 100;
				group.addElement(matsView);
				
				_enemyEditVGroup = new VGroup();
				_enemyEditVGroup.percentHeight = 100;
				_enemyEditVGroup.percentWidth = 100;
				_enemyEditVGroup.verticalAlign = "top";
				_enemyEditVGroup.horizontalAlign = "center";
				_enemyEditVGroup.addElement(modelView);
				_enemyEditVGroup.addElement(matsPanel);
				
				changeEditType(0);
			}
			
			public function changeEditType( type:int ):void {
				accordion.selectedIndex = type;
				middleArea.removeAllElements();
				rightArea.removeAllElements();
				if (type == 0) {
					middleArea.addElement(_enemyEditView);
					rightArea.addElement(_enemyEditVGroup);
				}
				else {
					middleArea.addElement(_bgEditView);
//					rightArea.addElement(_bgSelectView);
				}
			}
			
			private function onBgDataInit(event:GameEvent):void {
				EventManager.getInstance().removeEventListener(EventType.INIT_BG_DATA_COMPLETE, onBgDataInit);
				var list:List = new List();
				list.percentWidth = 100;
				list.percentHeight = 100;
				list.dataProvider = BgModel.getInstance().bgNameArray;
				list.addEventListener(MouseEvent.CLICK, function (e:Event):void {
					EventManager.getInstance().dispatchEvent(new GameEvent(EventType.BG_SELECT_CHANGE, (e.currentTarget as List).selectedIndex));
				});
				bgEdit.addElement(list);
				
				_bgEditView = new BgEditView();
			}
			
			private function onLevelClick(e:Event):void{
				var selectedNode:XML = (e.currentTarget as Tree).selectedItem as XML;
				var label:String=selectedNode.@label;
				_enemyEditView.init(label);
			}	
			
			private function onCreateNew(e:ContextMenuEvent):void
			{
				var levelLength:int = Data.getInstance().levelXML.level.length()+1;
				Data.getInstance().makeNewLevel("level"+levelLength);
				_enemyEditView.init("level"+levelLength);
			}
			
			private function onRename(e:ContextMenuEvent):void {
				
			}
			
			private function onDelete(e:ContextMenuEvent):void
			{
				Alert.okLabel = "确定";
				Alert.cancelLabel = "取消";
				var selectedNode:XML = _tree.selectedItem as XML;
				if(selectedNode)
					Alert.show("确定删除？", "tips", Alert.OK|Alert.CANCEL, this, alertClose);
				else 
					Alert.show("选择关卡");
				
			}
			
			private function alertClose(e:CloseEvent):void
			{
				if(e.detail == Alert.OK)
				{
					
					var index:int = _tree.selectedIndex
					if(index != -1)
					{
						Data.getInstance().deleteLevel(index);
						_enemyEditView.clear();
					}
				}
			}
			private function saveFile(event:Event):void
			{
				_enemyEditView.save();
				Data.getInstance().saveLocal();
				Data.getInstance().exportJS();
			}
			
			private function openLevelFile(event:Event):void {
				var file:File = File.desktopDirectory;
				var tip:String = "请选择关卡配置文件";
				var filter:FileFilter = new FileFilter("JSON","*.json;*.txt");
				file.browseForOpen(tip, [filter]);
				file.addEventListener(Event.SELECT, function (e:Event):void {
					var file:File = e.target as File;
					var fileStream:FileStream = new FileStream();
					fileStream.open(file, FileMode.READ);
					var config:Object = JSON.parse(fileStream.readUTFBytes(fileStream.bytesAvailable));
					// add to Data.getInstance();
				});
			}
			
			private function openBgFile(event:Event):void {
				var file:File = File.desktopDirectory;
				var tip:String = "请选择背景地图文件(.tmx)";
				var filter:FileFilter = new FileFilter("Tiled Map File","*.tmx");
				file.browseForOpen(tip, [filter]);
				file.addEventListener(Event.SELECT, function (e:Event):void {
					var file:File = e.target as File;
					var fileStream:FileStream = new FileStream();
					fileStream.open(file, FileMode.READ);
					var xml:XML = new XML(fileStream.readUTFBytes(fileStream.bytesAvailable));
					var imagePath:String = file.url.substring(0,file.url.lastIndexOf("/")+1) + xml..image.@source;
					_bgEditView.tmxMapView.loadFromXml(xml, imagePath);
				});
			}
			
			private function openExcelFile(event:Event):void {
				var file:File = File.desktopDirectory;
				var tip:String = "请选择怪物Excel配置文件";
				var filter:FileFilter = new FileFilter("JSON","*.xlsx");
				file.browseForOpen(tip, [filter]);
				file.addEventListener(Event.SELECT, function (e:Event):void {
					var file:File = e.target as File;
					ExcelReader.getInstance().initWithNativePath(file.nativePath);
				});
			}
			
			var process:NativeProcess;
			private function sendToServer(e:Event):void
			{
				if(NativeProcess.isSupported)
				{
					var nativeProcessStartupInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();
					var file:File = File.desktopDirectory.resolvePath("script/test.py");
					nativeProcessStartupInfo.executable = file;
					
					var processArgs:Vector.<String> = new Vector.<String>();
					processArgs[0] = "Resource/level";
					//processArgs[1] = "zql";
					nativeProcessStartupInfo.arguments = processArgs;
					
					process = new NativeProcess();
					process.start(nativeProcessStartupInfo);
					process.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA, onOutputData);
					process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
					process.addEventListener(NativeProcessExitEvent.EXIT, onExit);
					process.addEventListener(IOErrorEvent.STANDARD_OUTPUT_IO_ERROR, onIOError);
					process.addEventListener(IOErrorEvent.STANDARD_ERROR_IO_ERROR, onIOError);
				}
				else
				{
					Alert.show("NativeProcess not supported.");
				}
				
				
			}
			public function onOutputData(event:ProgressEvent):void
			{
			  	Alert.show("Got: "); 
			}
			
			public function onErrorData(event:ProgressEvent):void
			{
				Alert.show("ERROR -"); 
			}
			
			public function onExit(event:NativeProcessExitEvent):void
			{
				Alert.show("exit!");
				//Alert.show("Process exited with ", event.exitCode);
			}
			
			public function onIOError(event:IOErrorEvent):void
			{
				Alert.show(event.toString());
			}
			
			private function onAccordionClick(e:Event):void {
				changeEditType((e.currentTarget as Accordion).selectedIndex);
			}
			
			public function get getInstance():MapEditor { return _instance; }
			
			private var _instance:MapEditor;
			
			private var _enemyEditView:EditView;
			private var _enemyEditVGroup:VGroup;
			private var _tree:Tree;
			
			private var _bgEditView:BgEditView;
		]]>
	</fx:Script>
	
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	<s:VGroup height="100%" width="100%" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5">
		<s:HGroup id="toolbar" width="100%" verticalAlign="middle" horizontalAlign="left">
				<s:Button id="openBtn" label="打开关卡配置" click="openLevelFile(event)"/>
				<s:Button id="saveBtn" label="保存关卡配置" click="saveFile(event)"/>
				<s:Button id="openBgBtn" label="打开背景地图" click="openBgFile(event)"/>
				<s:Button id="openExcelBtn" label="打开怪物Excel" click="openExcelFile(event)"/>
				<s:Button id="sendBtn" label="上传" click="sendToServer(event)"/>
		</s:HGroup>
		
		<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left">
			<s:Panel id="accordionPanel" height="100%" title="选择编辑类别">
				<mx:Accordion id="accordion" height="100%" width="100%" click="onAccordionClick(event)">
					<s:NavigatorContent width="100%" height="100%" label="怪物编辑" id="enemyEdit">
					</s:NavigatorContent> 
					<s:NavigatorContent width="100%" height="100%" label="背景编辑" id="bgEdit">
					</s:NavigatorContent> 
				</mx:Accordion>
			</s:Panel>
			
			<s:BorderContainer height="100%" width="100%">
				<mx:Canvas id="middleArea" height="100%" width="100%" clipContent="true">
				</mx:Canvas>
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
	
	<s:VGroup height="100%" width="280" verticalAlign="top" horizontalAlign="right" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5">
		<s:BorderContainer id="rightArea" height="100%" width="100%">
		</s:BorderContainer>
	</s:VGroup>
		
</s:WindowedApplication>