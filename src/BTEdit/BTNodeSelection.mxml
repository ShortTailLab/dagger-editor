<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="400" height="600" close="onPressClose(event)" creationComplete="onCreate()">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.supportClasses.ItemRenderer;
			import spark.events.IndexChangeEvent;
			private function onCreate():void {
				var ac:ArrayCollection = new ArrayCollection();
				var array:Array = Data.getInstance().behaviorNodes as Array;
				for (var i:int = 0; i < array.length; i++) {
					ac.addItem(array[i].func);
				}
				ac.sort = new Sort();
				ac.refresh();
				this.mNodeList.dataProvider = ac;
				
				this.mTabNavigator.addEventListener(IndexChangedEvent.CHANGE, onTabChanged);
			}
			
			private function onTabChanged(event:IndexChangedEvent):void {
				if (event.newIndex == 2 && this.mLibraryList && this.mLibraryList.dataProvider == null) {
					var ac:ArrayCollection = new ArrayCollection();
					for (var b:String in Data.getInstance().behaviorSet) {
						ac.addItem(b);
					}
					ac.sort = new Sort();
					ac.refresh();
					this.mLibraryList.dataProvider = ac;
				}
			}
			
			private function onPressClose(event:Event):void {
				PopUpManager.removePopUp(this);
			}
			
			private function onSelectNode(event:IndexChangeEvent):void {
				trace(event.newIndex);
			}
			
			private function onSelectLibrary(event:IndexChangeEvent):void {
				trace(event.newIndex);
			}
			
			private function onPressFunc1(event:MouseEvent):void {
				
			}
			
			private function onPressFunc2(event:MouseEvent):void {
				
			}

			private function onPressFunc3(event:MouseEvent):void {
				
			}
			
			private function onPressFunc4(event:MouseEvent):void {
				
			}
			
			private function onPressFunc5(event:MouseEvent):void {
				
			}
			
			private function onPressFunc6(event:MouseEvent):void {
				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<mx:TabNavigator id="mTabNavigator" x="0" y="0" width="100%" height="100%" paddingTop="0">
		<s:NavigatorContent width="100%" height="100%" label="BT.Node.">
			<s:List id="mNodeList" x="0" y="0" width="100%" height="100%"
					change="onSelectNode(event)"></s:List>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="功能节点">
			<s:VGroup x="0" y="0" width="100%" height="100%" gap="20">
				<s:Button width="50" height="50" label="按钮" click="onPressFunc1(event)" buttonMode="true"
						  icon="assets/zhixing.png"/>
				<s:Button width="50" height="50" label="按钮" click="onPressFunc2(event)" buttonMode="true"
						  icon="assets/shunxu.png"/>
				<s:Button width="50" height="50" label="按钮" click="onPressFunc3(event)" buttonMode="true"
						  icon="assets/youxian.png"/>
				<s:Button width="50" height="50" label="按钮" click="onPressFunc4(event)" buttonMode="true"
						  icon="assets/tongbu.png"/>
				<s:Button width="50" height="50" label="按钮" click="onPressFunc5(event)" buttonMode="true"
						  icon="assets/tiaojian.png"/>
				<s:Button width="50" height="50" label="按钮" click="onPressFunc6(event)" buttonMode="true"
						  icon="assets/xunhuan.png"/>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="行为库">
			<s:List id="mLibraryList" x="0" y="0" width="100%" height="100%" change="onSelectLibrary(event)"></s:List>
		</s:NavigatorContent>
	</mx:TabNavigator>
</s:TitleWindow>
